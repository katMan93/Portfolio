/*
 * This program runs RegSniffer.cmd and then parses through
 *  the RegSniffResults.txt and counts the number of instances
 *  that result from the queries
 * If the count is greater than 60% of the variable "totalPossibleInstances"
 *  the presence of a virtual machine is confirmed
 */

#include <stdio.h>
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

float ParseRegSniffResults()
{
	float instanceCount = 0.0f;
	string resultsStr, resultsSubStr;
	size_t frontDelim, backDelim;
	
	ifstream RegSniffResults;
	RegSniffResults.open("RegSniffResults.txt");

	while (!RegSniffResults.eof())
	{
		getline(RegSniffResults, resultsStr);

		// Skip blank lines
		if (resultsStr == "")
		{
			continue;
		}
		// Find lines that have a query result in them
		else
		{
			resultsSubStr = resultsStr.substr(0, 3);
			if (resultsSubStr == "End")
			{
				// Isolate and extract the number and add to instanceCount
				frontDelim = resultsStr.find(':');
				backDelim = resultsStr.find('m');
				resultsSubStr = resultsStr.substr(frontDelim, backDelim - frontDelim);
				resultsSubStr.erase(0, 2);
				instanceCount += stof(resultsSubStr);
			}
			// Skip all other lines
			else
			{
				continue;
			}
		}
	}

	RegSniffResults.close();

	return instanceCount;
}

int main()
{
	char pauseChar;
	// Make sure to adjust totalPossibleInstances accordingly if the commented out
	//	queries in RegSniffer.cmd are used or the results of the program will be inaccurate
	float parseResult, totalPossibleInstances = 28.0f;

	// Run the command file that will query the registry
	system("RegSniffer.cmd");
	system("cls");

	// Get sum of instances and place into parseResult
	parseResult = ParseRegSniffResults();

	// Compare parseResult with totalPossibleInstances * .6 to
	//	discern whether or not a VM is present
	if (parseResult >= totalPossibleInstances * 0.6f)
	{
		cout << "VMware virtual machine detected." << endl;
	}
	else
	{
		cout << "No VMware virtual machine detected." << endl;
	}

	cin >> pauseChar;
	
	return 0;
}
